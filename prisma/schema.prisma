generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int               @id @default(autoincrement())
  email            String            @unique
  username         String            @unique
  password         String
  createdAt        DateTime          @default(now())
  updateut         DateTime          @updatedAt
  informationGuest informationGuest?
}

model RoomType {
  RoomType_Id      Int    @id @unique
  RoomType_name    String
  RoomType_size    Int
  RoomType_bed     String
  RoomType_guest   Int
  RoomPrice        Int
  DefalutRoomPrice Int
  RoomTypeDescrip  String
  Room             Room[]
}

model Room {
  RoomNo      Int           @id @unique
  Status      Boolean
  Typeid      Int
  RoomType    RoomType?     @relation(fields: [Typeid], references: [RoomType_Id], onDelete: NoAction, onUpdate: NoAction, map: "public_Room_Typeid_fkey")
  reservation reservation[]
}

model Role {
  Role_Id    Int        @id @unique
  Role_Title String
  Role_Des   String
  Employee   Employee[]
}

model Employee {
  Employee_Id Int    @id @unique
  Emfname     String
  Emlname     String
  Gender      String
  PhoneNo     String
  Email       String @unique
  Salary      Float
  Password    String
  Role_ID     Int?
  Role        Role?  @relation(fields: [Role_ID], references: [Role_Id], onDelete: NoAction, onUpdate: NoAction, map: "public_Employee_Role_ID_fkey")
}

model Enhanc {
  EnhancID      Int           @unique
  Enhancname    String
  Enhancdescrip String
  EnhancPrice   Int
  reservation   reservation[]
}

model reservation {
  BookID           Int               @id @unique
  HotelID          Int
  GuestID          Int
  RoomNo_id        Int
  Bookingdate      DateTime          @db.Timestamp(6)
  ArrivalDeparture DateTime          @db.Date
  Numadults        Int
  Numchild         Int
  EnhancmentID     Int
  Specialreq       String
  ArrivalDate      DateTime?         @db.Date
  Totalprice       Float?            @db.Real
  guestid          Int?              @unique
  Enhanc           Enhanc            @relation(fields: [EnhancmentID], references: [EnhancID], onDelete: NoAction, onUpdate: NoAction, map: "public_reservation_Enhancment_fkey")
  Hotel            Hotel             @relation(fields: [HotelID], references: [Hotel_ID], onDelete: NoAction, onUpdate: NoAction, map: "public_reservation_HotelID_fkey")
  Room             Room              @relation(fields: [RoomNo_id], references: [RoomNo], onDelete: NoAction, onUpdate: NoAction, map: "public_reservation_RoomNo_id_fkey")
  informationGuest informationGuest? @relation(fields: [guestid], references: [guestid], onDelete: NoAction, onUpdate: NoAction, map: "public_reservation_guestid_fkey")
}

model Hotel {
  Hotelname   String
  Address     String
  Postcode    Int
  City        String
  Country     String
  PhoneNo     String
  Hotel_ID    Int           @id
  reservation reservation[]
}

model informationGuest {
  guestid     Int          @id @unique
  Title       String
  FirstName   String
  LastName    String
  PhoneNo     String
  Address     String
  City        String
  Country     String
  User        User         @relation(fields: [guestid], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "public_informationGuest_guestid_fkey")
  reservation reservation?
}
